version: 2
jobs:
  test_classification_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Runnning tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/classification_model/requirements.txt
            chmod +x ./scripts/fetch_kaggle_dataset.sh
            chmod +x ./scripts/unzip_file.sh
            ./scripts/fetch_kaggle_dataset.sh
            ./scripts/unzip_file.sh
            PYTHONPATH=./packages/classification_model
            py.test -vv packages/classification_model/tests


  test_ml_api:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run:
          name: Runnning tests
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r packages/ml_api/requirements.txt
            py.test -vv packages/ml_api/tests


  train_and_upload_classification_model:
    working_directory: ~/project
    docker:
      - image: circleci/python:3.7.2
    steps:
      - checkout
      - run: 
          name: Setup env
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r packages/classification_model/requirements.txt
      - run: 
          name: Publish model
          command: |
            . venv/bin/activate
            chmod +x ./scripts/fetch_kaggle_dataset.sh ./scripts/publish_model.sh ./scripts/unzip_file.sh
            ./scripts/fetch_kaggle_dataset.sh
            ./scripts/unzip_file.sh
            PYTHONPATH=./packages/classification_model python3 packages/classification_model/classification_model/train_pipeline.py
            ./scripts/publish_model.sh ./packages/classification_model/

workflows:
  version: 2
  test-all:
    jobs:
      # - test_classification_model
      - test_ml_api
      # - train_and_upload_classification_model
      # - test_ml_api:
      #     requires:
      #       - train_and_upload_classification_model

